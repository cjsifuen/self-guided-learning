---
title: Learning Resources
order: 1
fig-align: center
fig-cap-location: top
sidebar: false
---

A collection of self-guided learning resources created by others.
  
### Languages and Programming

<details><summary>__Python__</summary>

[How to Learn to Code](https://www.youtube.com/watch?v=mvK0UzFNw1Q) -- A 5 minute video on how to approach programming, either learning theory, soliciting advice, OR (hint hint) __*problem solving*__.

[Python Course: Programming for Everybody (Getting Started with Python)](https://online.umich.edu/courses/programming-for-everybody-getting-started-with-python/) -- A terrific free course by the University of Michigan to learn the basics of programming in Python, with no prerequisites. 

[Biopython Course: Bioinformatics with Biopython](https://www.youtube.com/watch?v=ocA2IMe7dpA&list=PLhYDP66xNTKRdtUM8ekEmq1fC0mosXrgn&index=15) -- A 1-hour YouTube course that covers some common uses of biopython. Biopython is a set of tools for biological computaiton that is written in Python. It has many useful functions for processing and working with sequence files. 

[Python Cheatsheet](https://www.pythoncheatsheet.org/) -- A quick-reference, cheatsheet-styled website for common tasks/tricks in python. Helpful for beginners and power-users.

</details>

<details><summary>__R__</summary>

[R Course: swirl - learn R, in R](https://swirlstats.com/) -- Super cool way to learn R programming and datascience interactively, at your own pace, and in the R console. There is a library of courses you can learn from.

[R Course: Data Analysis using R](https://www.youtube.com/playlist?list=PLhR2Go-lh6X4fCAa3c_TBAjZD5A25s7fo) -- A comprehensive and high quality YouTube based course by Dr. Danny Arends (with videos, access to lectures, assignments, and answers) for those within minimal to no previous programming experience. This might be one of the best courses available.

[R for Data Science](https://r4ds.had.co.nz/index.html) -- A website for the "R for Data Science" book, with a focus on how to perform data science with R, from data exploration (visualization, workflow, working with tidy data, scripting), wrangling, modeling, and communicating results (R markdown).

[R Cheatsheet](https://cran.r-project.org/doc/contrib/Baggott-refcard-v2.pdf) -- A quick-reference cheatsheet for R.

</details>

<details><summary>__Unix and Bash__</summary>

[Unix Book: Unix Workbench](https://seankross.com/the-unix-workbench/introduction.html) -- A website (book) for those new to Unix-like operating systems and working at the command-line. This book covers unix and command-line basics, as well as introductory bash programming concepts (math, variables, loops, input/output, arrays, pbraces, functions), and writing programs. As a nice bonus, it also gives brief introductions to Git, GitHub, and Cloud Computing. 

[Bash Reference: bash-guide](https://github.com/Idnan/bash-guide) -- Common commands, with some minimal examples.

</details>

<details><summary>__Julia__</summary>

[Julia Course: Zero-to-Hero Julia Workshop](https://github.com/Datseris/Zero2Hero-JuliaWorkshop) -- Two day intensive, recorded ([YouTube](https://www.youtube.com/watch?v=Fi7Pf2NveH0)), workshop on the programming language, Julia. This workshop is intended for beginners. Julia is a programming language designed for scientific computing, to be quick, but also readable and high-level like Python. 

</details>

### Plotting and Visualizations

<details><summary>__With Python__</summary>

[Introduction to Data Visualization in Python](https://gilberttanner.com/blog/introduction-to-data-visualization-inpython/) -- A very simple introduction to data visualization in Python.

[Python Data Visualization Tutorials](https://realpython.com/tutorials/data-viz/) -- A set of tutorials for plotting with Python in Pandas, matplotlib, seaborn, and boken (interactive visualizations).  

[Interactive Visualizations with Plotly in Python](https://www.kaggle.com/code/kanncaa1/plotly-tutorial-for-beginners) -- An introduction, for beginners, to interactively plotting in Python using Plotly.

</details>

<details><summary>__With R__</summary>

[Data Visualization with R](https://rkabacoff.github.io/datavis/) -- A Web-based book focused on data visualization and plotting with R. It covers data importing, cleaning, using plotting libraries (ggplot2), customizing plots, interactive visualization, and more.

[Shiny Cheatsheet](https://shiny.rstudio.com/images/shiny-cheatsheet.pdf) -- A quick reference cheatsheet for creating interactive web apps with shiny.

</details>

### Single-Cell Analyses

<details><summary>__Single-Cell RNA-seq__</summary>

[scRNA-seq Analysis Tutorial: Analysis of Single-Cell RNA-seq Data](https://github.com/cellgeni/scRNA.seq.course) -- A continuously updated and comprehensive single-cell RNA-seq analysis tutorial/course, __taught primarily in `R`__. This course begins with a discussion of single-cell methods, experimental design, and data processing and ends with single-cell dataset integration. It uses primarily `Seurat`, but also covers other tools for analysis and integration.  

[scRNA-seq Tutorial: Single-cell best practices](https://www.sc-best-practices.org/preamble.html) -- A very good tutorial on the best practices in single-cell RNA-seq analysis, __taught primarily in `Python`__. This course starts with pre-processing and QC, and ends with a brief overview on CITE-seq, immune repertoire, and integration. The [paper](https://www.embopress.org/doi/full/10.15252/msb.20188746) that this course was originally based on.

[Single-Cell Genomics Workshop: Single-Cell Genomics Day](https://satijalab.org/scgd22/) -- A yearly workshop by the Satija lab (leaders in the world of single-cell analysis) on various single-cell genomics analysis topics/methods. In addition to a "recent and future advances" session, the workshop covers spatial and temporal analysis, epigenomic analysis, genotype-phenotype landscapes, and multimodal analyses.

[scRNA-seq Best Practices Pipeline: nf-core/scrnaseq](https://nf-co.re/scrnaseq) -- A best-practices pipline for processing 10x genomics single-cell data using `Nextflow`, a workflow management tool that provides improved computational metics and reproducibility.

[Curated database of single cell studies](https://www.nxn.se/single-cell-studies/) -- A manually curated database of over 1800 single-cell studies, dating back to 2002. The doi, number of cells, organism, tissue, and experimental method are included, as well as other useful information.

</details>

<details><summary>__Single-Cell ATAC-seq__</summary>

[scATAC-seq Lectues: Best practices for ATAC-seq](https://liulab-dfci.github.io/bioinfo-combio/scatac.html) -- A set of lectures from Ming Tang that cover the scATAC-seq experimental method, pre-processing and QC, and anlysis and integration.

[scATAC-seq Review Paper: Single-cell ATAC sequencing analysis: From data preprocessing to hypothesis generation](https://www.sciencedirect.com/science/article/pii/S2001037020303019#f0005) -- A helpful review of scATAC-seq technologies and analysis software.

</details>

### Proteomics

[Mass-Spec Based Proteomics Aanalysis Tutorial]

[Best practices for mass-spec-based biomarker discovery](https://www.nature.com/articles/s41596-021-00566-6) -- A high-level paper overview of best practices for mass-spectrometry-based biomarker discovery. 

### Imaging Analysis
[Segmentation]

### Workflow Managers
[Nexflow]  

[Snakemake]  

[Galaxy]

### Open Science & Reproducibility

[Posit]  

[Posit Cheatsheets](https://posit.co/resources/cheatsheets/?type=posit-cheatsheets/) -- An amazing list of cheatsheets for eveyrthing rmarkdown, shiny, reticulate, stringr, readr, sparkly, tidyr, dplyr, ggplot2, and more.

[Jupyterlab and Notebooks]

### Cloud Computing
[]  
[]  
[]  

### ML/AI


### General Bioinformatics

[Bioinformatics Course: Bioinformatics for Plant and Animal Sciences](https://www.youtube.com/playlist?list=PLhR2Go-lh6X5A5WbiO3SPHuoWbwpNznUl) -- A quality YouTube based course by Dr. Danny Arends (with [videos](https://www.youtube.com/playlist?list=PLhR2Go-lh6X5A5WbiO3SPHuoWbwpNznUl), access to [lectures](https://dannyarends.nl/bioinformatik/), [assignments](https://dannyarends.nl/bioinfo/), and answers) on bioinformatics. This course covers  biological topics (genetics, molecular biology, metabolism, homology/phylogeny, etc.), as well as computational and analysis topics (transcriptomics, R, stats) and ends with learning how to create an R package.

[Rosalind](https://rosalind.info/problems/locations/) -- a great resource to learn about bioinformatics (including algorithms) and programming by problem-solving.


### Statistics

[Introductory Stats Course: Introduction to Experimental Design and Hypothesis Testing](https://github.com/gladstone-institutes/Bioinformatics-Workshops/wiki/Introduction-to-Experimental-Design-and-Hypothesis-testing) -- A beginner-friendly set of resources (slides, code) from an online workshop by the Gladstone Institutes to work though. The resources cover concepts underlying hypothesis testing.

[Intermediate Course: Statistics of Enrichment Analyses Methods](https://github.com/gladstone-institutes/Bioinformatics-Workshops/wiki/Statistics-of-Enrichment-Analyses-Methods) -- A course designed for those familiar with basic statistics and experimental design concepts, an understanding of high-throughput analyses (RNA-seq, Mass Spec, etc.), and a working knowledge of R.

